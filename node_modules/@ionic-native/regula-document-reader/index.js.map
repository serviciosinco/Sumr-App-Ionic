{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/regula-document-reader/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;IA6B9B,wCAAiB;;;;IAEzD;;;OAGG;;;;;IAEH,yCAAU;;;;cAAC,OAAY,KAAU;IAEjC;;;OAGG;;;;;IAEH,2CAAY;;;;kBAAwB,MAAM,CAAC,EAAE;;gBAf9C,UAAU;;;QAOR,OAAO,EAAE;;;;0DACuB;;QAMhC,OAAO,EAAE;;;;4DACmC;;;;;;;;;;;;;;;;;;;IAdlC,oBAAoB;QAThC,MAAM,CAAC;YACN,UAAU,EAAE,wBAAwB;YACpC,MAAM,EAAE,+BAA+B;YACvC,SAAS,EAAE,gBAAgB;YAC3B,IAAI,EAAE,sEAAsE;YAC5E,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;YAC7B,OAAO,EAAE,oGAAoG;SAC9G,CAAC;OAEW,oBAAoB,EAehC;+BA7CD;EA8B0C,iBAAiB;SAA9C,oBAAoB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @paid\n * @beta\n * @name Regula Document Reader\n * @description\n * Plugin for reading and validation of identification documents.\n *\n * @usage\n * ```typescript\n * import { RegulaDocumentReader } from '@ionic-native/regula-document-reader';\n *\n * let license; // read regula.license file\n * RegulaDocumentReader.initReader(license); // initialize reader\n * RegulaDocumentReader.scanDocument().then((result) => {\n * \t\t// read result\n * })\n * ```\n */\n@Plugin({\n  pluginName: 'Regula Document Reader',\n  plugin: 'cordova-plugin-documentreader',\n  pluginRef: 'DocumentReader',\n  repo: 'https://github.com/regulaforensics/cordova-plugin-documentreader.git',\n  platforms: ['iOS', 'Android'],\n  install: 'ionic plugin add cordova-plugin-documentreader --variable CAMERA_USAGE_DESCRIPTION=\"To take photo\"',\n})\n@Injectable()\nexport class RegulaDocumentReader extends IonicNativePlugin {\n\n  /**\n   * Initialize the scanner\n   * @param license {any} License data\n   */\n  @Cordova()\n  initReader(license: any): void {}\n\n  /**\n   * Run the scanner\n   * @return {Promise<string[]>} Returns a promise that resolves when results was got, and fails when not\n   */\n  @Cordova()\n  scanDocument(): Promise<string[]> { return; }\n}\n"]}